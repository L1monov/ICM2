import telebot
from telebot import types
import db
import defs
import parsing
import datetime
bot = telebot.TeleBot('5490108271:AAEWDnpV7AkloYuGsr1hcHLL-4Gsb3ID15s')


#XUY


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    if db.CheckUser(user_id) == 'No':
        db.NewUser(user_id,username,first_name,last_name)
    mesg = bot.send_message(message.chat.id, 'üëã–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É —Ä–∞—Å–ø–ø–∏—Å–∞–Ω–∏–µüëã \nüîç–î–∞–≤–∞–π –Ω–∞–π–¥—ë–º —Ç—Ä–æ—é –≥—Ä—É–ø–ø—Éüîé\n‚ùï(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)‚ùï')
    bot.register_next_step_handler(mesg, find_group)
@bot.message_handler(commands=['info'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
    rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
    rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
    profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    markup.add(rasp_week, rasp_tomorrow, rasp_today)
    markup.add(profil, settings)
    bot.send_message(message.chat.id, '–ù–∏—Ö—É—è —Ç—ã —É–º–Ω—ã–π. \n–ë–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π ICM', reply_markup=markup)
@bot.message_handler(commands=['admin'])
def admin(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
    rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
    rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
    profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    markup.add(rasp_week, rasp_tomorrow, rasp_today)
    markup.add(profil, settings)
    if db.all_user(message.from_user.id) == 'No':
        bot.send_message(message.chat.id, '–¢—ã –Ω–µ –æ–¥–º–µ–Ω', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f"{db.all_user(message.from_user.id)}", reply_markup=markup)

def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    if db.CheckUser(user_id) == 'No':
        db.NewUser(user_id,username,first_name,last_name)
    mesg = bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É —Ä–∞—Å–ø–ø–∏—Å–∞–Ω–∏–µ. \n–î–∞–≤–∞–π –Ω–∞–π–¥—ë–º —Ç—Ä–æ—é –≥—Ä—É–ø–ø—É.\n(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)')
    bot.register_next_step_handler(mesg, find_group)

def find_group (message):
    try:
        faculty = db.find_number_group(message.text.upper())[0]
        kind = db.find_number_group(message.text.upper())[1]
        group = db.find_number_group(message.text.upper())[2]
        markup = types.InlineKeyboardMarkup()
        yes = types.InlineKeyboardButton(text='–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ!', callback_data=f"{'menu'}")
        no = types.InlineKeyboardButton(text='–ù–µ—Ç, —Ç—ã –æ—à–∏–±—Å—è', callback_data=f"{'wrong_choicec'}")
        markup.add(yes, no)
        msg = f"–ö–∞–∂–µ—Ç—Å—è —è —á—Ç–æ-—Ç–æ –Ω–∞—à—ë–ª\n–§–∞–∫—É–ª—å—Ç–µ—Ç : {faculty}\n–ö—É—Ä—Å {kind}\n–ì—Ä—É–ø–ø–∞ {group}\n–Ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—à—ë–ª?"
        db.UpdateInfoUser(message.from_user.id, message.text)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
    except Exception as ex:
        print (ex)
        mesg = bot.send_message(message.chat.id, '–¢—ã –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ , –≤–≤–µ–¥–∏ –µ—â–µ —Ä–∞–∑.\n(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)')
        bot.register_next_step_handler(mesg, find_group)
def new_offer(message):
    msg = f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
    db.New_Offer(message.from_user.id, message.text)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
    rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
    rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
    profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    markup.add(rasp_week, rasp_tomorrow, rasp_today)
    markup.add(profil, settings)
    bot.send_message(message.chat.id, msg, reply_markup=markup)
def new_mistake(message):
    msg = f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
    db.New_Mistake(message.from_user.id, message.text)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
    rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
    rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
    profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    markup.add(rasp_week, rasp_tomorrow, rasp_today)
    markup.add(profil, settings)
    bot.send_message(message.chat.id, msg, reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: callback.data)
def check_callback(callback):
    if callback.data == "menu":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
        rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
        rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
        profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        markup.add(rasp_week, rasp_tomorrow, rasp_today)
        markup.add(profil, settings)
        bot.send_message(callback.message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)
    if callback.data == "wrong_choicec":
        mesg = bot.send_message(callback.message.chat.id, '–ü–æ—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑.\n(–ü—Ä–∏–º–µ—Ä –ò–ë-321)')
        bot.register_next_step_handler(mesg, find_group)

@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "–ú–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
        rasp_tomorrow = types.KeyboardButton("–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞")
        rasp_today = types.KeyboardButton("–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è")
        profil = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        settings = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        markup.add(rasp_week, rasp_tomorrow, rasp_today)
        markup.add(profil, settings)
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)
    if (message.text == "–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rasp_Monday = types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
        rasp_Tuesday = types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫')
        rasp_Wednesday = types.KeyboardButton('–°—Ä–µ–¥–∞')
        rasp_Thursday = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥')
        rasp_Friday = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞')
        rasp_Saturday = types.KeyboardButton('–°—É–±–±–æ—Ç–∞')
        menu = types.KeyboardButton('–ú–µ–Ω—é')
        markup.add(rasp_Monday, rasp_Tuesday, rasp_Wednesday)
        markup.add(rasp_Thursday, rasp_Friday,rasp_Saturday)
        markup.add(menu)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', reply_markup=markup)
    if (message.text == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 0)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 0)}\n{msg}")
    if (message.text == "–í—Ç–æ—Ä–Ω–∏–∫"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 1)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 1)}\n{msg}")
    if (message.text == "–°—Ä–µ–¥–∞"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 2)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 2)}\n{msg}")
    if (message.text == "–ß–µ—Ç–≤–µ—Ä–≥"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 3)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 3)}\n{msg}")
    if (message.text == "–ü—è—Ç–Ω–∏—Ü–∞"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 4)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 4)}\n{msg}")
    if (message.text == "–°—É–±–±–æ—Ç–∞"):
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], 5)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], 5)}\n{msg}")
    if (message.text == "–†–∞—Å–ø. –∑–∞–≤—Ç—Ä–∞"):
        if datetime.datetime.today().weekday() == 6:
            print(123)
            day = 0
        if datetime.datetime.today().weekday() != 6:
            print(321)
            day = datetime.datetime.today().weekday() + 1
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], day)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], day)}\n{msg}")
    if (message.text == "–†–∞—Å–ø. —Å–µ–≥–æ–¥–Ω—è"):
        day = datetime.datetime.today().weekday()
        lesson = parsing.rasp_day(db.InfoUser(message.from_user.id)[2], day)
        if lesson == '–ü–∞—Ä –Ω–µ—Ç':
            bot.send_message(message.chat.id, '–ü–∞—Ä –Ω–µ—Ç , –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')
        else:
            msg = ''
            for i in lesson:
                name_lesson = lesson[i]['name']
                msg = f"{msg}################ \n{name_lesson}\n"
                type_lesson = lesson[i]['type']
                msg = f"{msg}{type_lesson}\n"
                aud_lesson = lesson[i]['aud']
                msg = f"{msg}{aud_lesson}\n"
                time_lesson = lesson[i]['time']
                msg = f"{msg}{time_lesson}\n"
                prepod = lesson[i]['prepod']
                msg = f"{msg}{prepod}\n"
            bot.send_message(message.chat.id, f"{parsing.type_week(db.InfoUser(message.from_user.id)[2], day)}\n{msg}")
    if (message.text == "–ü—Ä–æ—Ñ–∏–ª—å"):
        faculty = db.InfoUser(message.from_user.id)[0]
        if faculty == '–ú–ò–ü':
            facylty = '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ'
        if faculty == '–¢–î':
            facylty = '–¢–æ—Ä–≥–æ–≤–æ–µ –¥–µ–ª–æ'
        if faculty == '–ö–¢–ò–ò–ë':
            facylty = '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
        if faculty == '–£–≠–§':
            facylty = '–£—á–µ—Ç–Ω–æ–µ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π'
        if faculty == '–≠–ò–§':
            facylty = '–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã'
        if faculty == '–Æ–†':
            facylty = '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç'
        if faculty == '–õ–ò–ñ':
            facylty = '–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∏ –∏ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∏'
        kind = db.InfoUser(message.from_user.id)[1]
        group = db.InfoUser(message.from_user.id)[2]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        menu = types.KeyboardButton("–ú–µ–Ω—é")
        change_group = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É")
        markup.add(menu, change_group)
        bot.send_message(message.chat.id, f"–í–∞—à —Ñ–∞–∫—É–ª—å—Ç–µ—Ç: {faculty}\n–í–∞—à –∫—É—Ä—Å: {kind}\n–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {group}",reply_markup=markup)
    if (message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É"):
        mesg = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ –≥—Ä—É–ø–ø—É\n(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)')
        bot.register_next_step_handler(mesg, find_group)
    if (message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        ofers = types.KeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
        mistake = types.KeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ")
        menu = types.KeyboardButton("–ú–µ–Ω—é")
        markup.add(ofers)
        markup.add(mistake)
        markup.add(menu)
        bot.send_message(message.chat.id, f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏",reply_markup=markup)
    if (message.text == "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"):
        mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ')
        bot.register_next_step_handler(mesg, new_offer)
    if (message.text == "–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ"):
        mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—à–∏–±–∫—É')
        bot.register_next_step_handler(mesg, new_mistake)

print ('bot rolling')
bot.polling(none_stop=True)




